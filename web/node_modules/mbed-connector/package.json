{
  "name": "mbed-connector",
  "version": "1.2.1",
  "description": "Node.js wrapper for mbed Connector REST calls",
  "main": "index",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ARMmbed/mbed-connector-node.git"
  },
  "author": {
    "name": "Brian Daniels",
    "email": "brian.daniels@arm.com"
  },
  "scripts": {
    "test": "mocha test/test-mock.js",
    "test-external-longpoll": "mocha test/test-external-longpoll.js",
    "test-external-callback": "mocha test/test-external-callback.js",
    "docs": "jsdoc2md \"lib/**/*.js\" > docs/API.md"
  },
  "dependencies": {
    "extend": "^3.0.0",
    "request": "^2.34.0",
    "url-join": "0.0.1"
  },
  "devDependencies": {
    "dotenv": "^1.2.0",
    "mocha": "^2.3.4",
    "nock": "^5.2.1",
    "pty.js": "^0.3.0",
    "jsdoc-to-markdown": "^1.3.3"
  },
  "gitHead": "d8b31bd4612a23e468b9f010282ea10735b269e3",
  "readme": "![build status](https://travis-ci.org/ARMmbed/mbed-connector-node.svg?branch=master)\n\n# mbed-connector\n\nNode.js library for talking to the mbed Device Connector Service\n\n## API Reference\n\nYou can view the full API Reference [here](docs/API.md).\n\n## How to use\n\n### Get all endpoints\n\n```javascript\nvar MbedConnector = require('mbed-connector');\nvar mbedConnector = new MbedConnector({\n  accessKey: /* Access Key */\n});\nmbedConenctor.getEndpoints(function(error, endpoints) {\n  if (error) throw error;\n  console.log('Endpoints:', endpoints);\n});\n```\n\n### Get an endpoint's resources\nIn this example, the endpoint's name is `test-endpoint`.\n\n```javascript\nvar MbedConnector = require('mbed-connector');\nvar mbedConnector = new MbedConnector({\n  accessKey: /* Access Key */\n});\nmbedConenctor.getResources('test-endpoint', function(error, resources) {\n  if (error) throw error;\n  console.log('Resources:', resources);\n});\n```\n\n### Get a resource's value\nIn this example, the endpoint's name is `test-endpoint` and the resource URI is `/Test/0/D`.\n\n**NOTE:** Long polling is used as the notification channel\n\n```javascript\nvar MbedConnector = require('mbed-connector');\nvar mbedConnector = new MbedConnector({\n  accessKey: /* Access Key */\n});\nmbedConnector.startLongPolling(function(error) {\n  if (error) throw error;\n  mbedConenctor.getResourceValue('test-endpoint', '/Test/0/D', function(error, value) {\n    if (error) throw error;\n    console.log('Value:', value);\n  });\n});\n```\n\n### Get all endpoints, resources, and values\n```javascript\nvar MbedConnector = require('mbed-connector');\nvar mbedConnector = new MbedConnector({\n  accessKey: /* Access Key */\n});\n\n// Setup notification channel\nmbedConnector.startLongPolling(function(error) {\n  if (error) throw error;\n  mbedConnector.getEndpoints(function(error, endpoints) {\n    if (error) throw error;\n    endpoints.forEach(function(endpoint) {\n      mbedConnector.getResources(endpoint.name, function(error, resources) {\n        if (error) throw error;\n        resources.forEach(function(resource) {\n          mbedConnector.getResourceValue(endpoint.name, resource.uri, function(error, value) {\n            console.log('Endpoint:', endpoint.name);\n            console.log('Resource:', resource.uri);\n            console.log('Value:', value);\n          });\n        });\n      });\n    });\n  });\n});\n```\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ARMmbed/mbed-connector-node/issues"
  },
  "homepage": "https://github.com/ARMmbed/mbed-connector-node#readme",
  "_id": "mbed-connector@1.2.1",
  "_shasum": "42268c1788aa571bb08ba4deedfc2071b5f247aa",
  "_from": "git+https://github.com/ARMmbed/mbed-connector-node.git",
  "_resolved": "git+https://github.com/ARMmbed/mbed-connector-node.git#d8b31bd4612a23e468b9f010282ea10735b269e3"
}
